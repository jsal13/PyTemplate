[tool.poetry]
name = "PyTemplate"
version = "0.1.0"
description = ""
authors = ["James Salvatore <jimmy.c.salvatore@gmail.com>"]

[tool.poetry.dependencies]
python = ">=3.9,<3.11"
invoke = "^1.6.0"

[tool.poetry.dev-dependencies]
black = "^21.12b0"
flake8 = "^4.0.1"
mypy = "^0.930"
pre-commit = "^2.16.0"
pydantic = "^1.8.2"
pylint = "^2.12.2"
pytest = "^6.2.5"
pytest-cov = "^3.0.0"
Sphinx = "^4.3.2"
numpydoc = "^1.1.0"
sphinx-rtd-theme = "^1.0.0"
sphinx-autoapi = "^1.8.4"
tox = "^3.24.4"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pylint.format]
max-line-length = "88"

[tool.pylint.BASIC]
good-names = [
  "i",
  "j",
  "k",
  "idx",
  "jdx",
  "kdz",
  "_",
  "x",
  "y",
  "z",
  "tz",
  "n",
  "m",
  "df"
]

# https://black.readthedocs.io/en/stable/guides/using_black_with_other_tools.html#pylint
[tool.pylint.messages_control]
disable = "C0330, C0326"

# https://pydantic-docs.helpmanual.io/mypy_plugin/#configuring-the-plugin
[tool.mypy]
plugins = ["pydantic.mypy"]

follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
# For strinct mypy...
disallow_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.black]
target-version = ['py39']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.pyright]


# See https://tox.wiki/en/latest/example/basic.html#pyproject-toml-tox-legacy-ini
[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py39
isolated_build = True

[testenv]
deps =
  pytest
  pytest-cov

commands = pytest --cov=pytemplate tests/
    coverage report -m
"""
