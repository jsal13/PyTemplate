[tool.poetry]
name = "pytemplate"
version = "0.1.0"
description = ""
authors = ["James Salvatore <jimmy.c.salvatore@gmail.com>"]

[tool.poetry.dependencies]
python = ">=3.9,<3.11"

[tool.poetry.dev-dependencies]
black = "^21.12b0"
flake8 = "^4.0.1"
invoke = "^1.6.0"
ipykernel = "^6.7.0"
isort = "^5.10.1"
mypy = "^0.930"
pre-commit = "^2.16.0"
pydantic = "^1.8.2"
pydocstyle = "^6.1.1"
pylint = "^2.12.2"
pytest = "^6.2.5"
pytest-cov = "^3.0.0"
Sphinx = "^4.3.2"
numpydoc = "^1.1.0"
sphinx-rtd-theme = "^1.0.0"
sphinx-autoapi = "^1.8.4"
tox = "^3.24.4"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


# ========================================
# PYLINT
# For general linting.
# > # https://docs.pytest.org/en/latest/customize.html?highlight=pyproject#pyproject-toml
# > https://black.readthedocs.io/en/stable/guides/using_black_with_other_tools.html#pylint
# ========================================
[tool.pylint.format]
max-line-length = "110"

[tool.pylint.ini_options]
ignore = [".tox", ".direnv", "python_venv"]

[tool.pylint.LOGGING]
disable=["logging-fstring-interpolation"]

[tool.pylint.BASIC]
good-names = [
  "i",
  "j",
  "k",
  "idx",
  "jdx",
  "kdz",
  "_",
  "x",
  "y",
  "z",
  "tz",
  "n",
  "m",
  "df",
  "f",
  "c",
]

[tool.pylint.messages_control]
disable = [
  "C0330", 
  "C0326", 
  "C0114", # missing-module-docstring
  "C0115", # missing-class-docstring
  "C0116", # missing-function-docstring
  "R0902", # Too many instance attributes
  "W0511", # TODO: fixme symbols.
]


# ========================================
# MYPY
# > For type-hint checking.
# > https://pydantic-docs.helpmanual.io/mypy_plugin/#configuring-the-plugin
# ========================================
[tool.mypy]
plugins = ["pydantic.mypy", "numpy.typing.mypy_plugin"]

follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
# For strinct mypy...
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = []
ignore_missing_imports = true

# ========================================
# BLACK
# > For opinionated formatting.
# ========================================
[tool.black]
target-version = ['py39']
line-length = 110
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

# ========================================
# PYRIGHT
# > To stop a "pyright" warning that it's not in here.
# ========================================
[tool.pyright]


# ========================================
# TOX
# > For standardized texting.
# > https://tox.wiki/en/latest/example/basic.html#pyproject-toml-tox-legacy-ini
# ========================================
[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py39
isolated_build = True

[testenv]
deps =
  pytest
  pytest-cov

commands = pytest --cov=pytemplate tests/
    coverage report -m
"""


# ========================================
# ISORT
# > For sorting imports.
# > https://timothycrosley.github.io/isort/
# ========================================
[tool.isort]

skip = [
  '.bzr',
  '.direnv',
  '.eggs',
  '.git',
  '.hg',
  '.mypy_cache',
  '.nox',
  '.pants.d',
  '.svn',
  '.tox',
  '.venv',
  '_build',
  'buck-out',
  'build',
  'dist',
  'node_modules',
  'venv',
  'python_venv',
]

skip_gitignore = true
line_length = 110
profile = "black"

# ========================================
# PYDOCSTYLE
# > For linting docstrings.
# > http://www.pydocstyle.org/en/stable/usage.html
# ========================================
[tool.pydocstyle]
inherit = false
ignore = [
  "D100" # Missing docstring in public module.
]
match = "*.py"
